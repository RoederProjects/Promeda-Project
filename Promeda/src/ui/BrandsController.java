package ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;

import javax.swing.JList;

import org.apache.commons.dbutils.DbUtils;
import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.ResultSetHandler;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import model.prototype.Brand;

public class BrandsController implements ActionListener {

	private BrandsView view;

	public BrandsController() {
		initView();
		try {
			initBrands();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}

	public void initView() {
		view = new BrandsView();
		view.setVisible(true);
	}

	public void initBrands() throws SQLException {

//		ResultSetHandler<Object[]> h = new ResultSetHandler<Object[]>() {
//			public Object[] handle(ResultSet rs) throws SQLException {
//				if (!rs.next()) {
//					return null;
//				}
//
//				ResultSetMetaData meta = rs.getMetaData();
//				int cols = meta.getColumnCount();
//				Object[] result = new Object[cols];
//
//				for (int i = 0; i < cols; i++) {
//					result[i] = rs.getObject(i + 1);
//				}
//
//				return result;
//			}
//		};
		Connection conn = null;
		try {
			// No DataSource so we must handle Connections manually
			QueryRunner run = new QueryRunner();

			conn = createConnection();
			
//			Object[] result = run.query(conn, "SELECT name FROM mail_address", h);
//			view.listBrands.setListData(result);
			
			// Use the BeanListHandler implementation to convert all
			// ResultSet rows into a List of Person JavaBeans.
			ResultSetHandler<List<Brand>> rshandler = new BeanListHandler<Brand>(Brand.class);

			// Execute the SQL statement and return the results in a List of
			// Person objects generated by the BeanListHandler.
			List<Brand> brands = run.query(conn, "SELECT name FROM mail_address", rshandler);
			view.listBrands = new JList(brands.toArray());
			view.repaint();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			// Use this helper method so we don't have to check for null
			DbUtils.close(conn);
		}
	}

	/**
	 * Creates db.connection
	 *
	 * @throws SQLException           Wenn keine Verbindung zu einer Datenbank
	 *                                hergestellt werden konnte.
	 * @throws ClassNotFoundException Wenn der Datenbanktreiber nicht gefunden
	 *                                werden konnte.
	 */
	private Connection createConnection() throws SQLException, ClassNotFoundException {
		Class.forName("com.mysql.jdbc.Driver");
		return DriverManager.getConnection("jdbc:mysql://xd1.serverdomain.org:3306/xd122_db9", "xd122_9",
				"Rosebud123!");
		// jdbc:mysql://9153.whserv.de:3306/web2_db2","web2_2","17-Nutoffel!
		// here sonoo is database name, root is username and password
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub

	}

}
